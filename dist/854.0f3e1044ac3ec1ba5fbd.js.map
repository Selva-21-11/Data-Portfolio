{"version":3,"file":"854.0f3e1044ac3ec1ba5fbd.js","mappings":"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","sources":["webpack://my-3d-portfolio/./node_modules/react-intersection-observer/dist/index.mjs","webpack://my-3d-portfolio/./src/blocks/TextAnimations/VariableProximity/VariableProximity.jsx","webpack://my-3d-portfolio/./src/components/AboutMe.js"],"sourcesContent":["\"use client\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/InView.tsx\nimport * as React from \"react\";\n\n// src/observe.ts\nvar observerMap = /* @__PURE__ */ new Map();\nvar RootIds = /* @__PURE__ */ new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = void 0;\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\nfunction getRootId(root) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(\n    (key) => options[key] !== void 0\n  ).map((key) => {\n    return `${key}_${key === \"root\" ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\nfunction createObserver(options) {\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n  if (!instance) {\n    const elements = /* @__PURE__ */ new Map();\n    let thresholds;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        var _a;\n        const inView = entry.isIntersecting && thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          entry.isVisible = inView;\n        }\n        (_a = elements.get(entry.target)) == null ? void 0 : _a.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n  return instance;\n}\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === \"undefined\" && fallbackInView !== void 0) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {\n    };\n  }\n  const { id, observer, elements } = createObserver(options);\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    callbacks.splice(callbacks.indexOf(callback), 1);\n    if (callbacks.length === 0) {\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n    if (elements.size === 0) {\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\n// src/InView.tsx\nfunction isPlainChildren(props) {\n  return typeof props.children !== \"function\";\n}\nvar InView = class extends React.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"node\", null);\n    __publicField(this, \"_unobserveCb\", null);\n    __publicField(this, \"handleNode\", (node) => {\n      if (this.node) {\n        this.unobserve();\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          this.setState({ inView: !!this.props.initialInView, entry: void 0 });\n        }\n      }\n      this.node = node ? node : null;\n      this.observeNode();\n    });\n    __publicField(this, \"handleChange\", (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        this.unobserve();\n      }\n      if (!isPlainChildren(this.props)) {\n        this.setState({ inView, entry });\n      }\n      if (this.props.onChange) {\n        this.props.onChange(inView, entry);\n      }\n    });\n    this.state = {\n      inView: !!props.initialInView,\n      entry: void 0\n    };\n  }\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n  componentWillUnmount() {\n    this.unobserve();\n  }\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay\n      },\n      fallbackInView\n    );\n  }\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children\n    );\n  }\n};\n\n// src/useInView.tsx\nimport * as React2 from \"react\";\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _a;\n  const [ref, setRef] = React2.useState(null);\n  const callback = React2.useRef(onChange);\n  const [state, setState] = React2.useState({\n    inView: !!initialInView,\n    entry: void 0\n  });\n  callback.current = onChange;\n  React2.useEffect(\n    () => {\n      if (skip || !ref) return;\n      let unobserve;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry\n          });\n          if (callback.current) callback.current(inView, entry);\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            unobserve();\n            unobserve = void 0;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay\n        },\n        fallbackInView\n      );\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay\n    ]\n  );\n  const entryTarget = (_a = state.entry) == null ? void 0 : _a.target;\n  const previousEntryTarget = React2.useRef(void 0);\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: void 0\n    });\n  }\n  const result = [setRef, state.inView, state.entry];\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\nexport {\n  InView,\n  defaultFallbackInView,\n  observe,\n  useInView\n};\n//# sourceMappingURL=index.mjs.map","/*\n\tInstalled from https://reactbits.dev/default/\n*/\n\nimport { forwardRef, useMemo, useRef, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./VariableProximity.css\";\nimport React from \"react\";\n\n\nfunction useAnimationFrame(callback) {\n  useEffect(() => {\n    let frameId;\n    const loop = () => {\n      callback();\n      frameId = requestAnimationFrame(loop);\n    };\n    frameId = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(frameId);\n  }, [callback]);\n}\n\nfunction useMousePositionRef(containerRef) {\n  const positionRef = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const updatePosition = (x, y) => {\n      if (containerRef?.current) {\n        const rect = containerRef.current.getBoundingClientRect();\n        positionRef.current = { x: x - rect.left, y: y - rect.top };\n      } else {\n        positionRef.current = { x, y };\n      }\n    };\n\n    const handleMouseMove = (ev) => updatePosition(ev.clientX, ev.clientY);\n    const handleTouchMove = (ev) => {\n      const touch = ev.touches[0];\n      updatePosition(touch.clientX, touch.clientY);\n    };\n\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"touchmove\", handleTouchMove);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"touchmove\", handleTouchMove);\n    };\n  }, [containerRef]);\n\n  return positionRef;\n}\n\nconst VariableProximity = forwardRef((props, ref) => {\n  const {\n    label,\n    fromFontVariationSettings,\n    toFontVariationSettings,\n    containerRef,\n    radius = 50,\n    falloff = \"linear\",\n    className = \"\",\n    onClick,\n    style,\n    ...restProps\n  } = props;\n\n  const letterRefs = useRef([]);\n  const interpolatedSettingsRef = useRef([]);\n  const mousePositionRef = useMousePositionRef(containerRef);\n  const lastPositionRef = useRef({ x: null, y: null });\n\n  const parsedSettings = useMemo(() => {\n    const parseSettings = (settingsStr) =>\n      new Map(\n        settingsStr\n          .split(\",\")\n          .map((s) => s.trim())\n          .map((s) => {\n            const [name, value] = s.split(\" \");\n            return [name.replace(/['\"]/g, \"\"), parseFloat(value)];\n          }),\n      );\n\n    const fromSettings = parseSettings(fromFontVariationSettings);\n    const toSettings = parseSettings(toFontVariationSettings);\n\n    return Array.from(fromSettings.entries()).map(([axis, fromValue]) => ({\n      axis,\n      fromValue,\n      toValue: toSettings.get(axis) ?? fromValue,\n    }));\n  }, [fromFontVariationSettings, toFontVariationSettings]);\n\n  const calculateDistance = (x1, y1, x2, y2) =>\n    Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n  const calculateFalloff = (distance) => {\n    const norm = Math.min(Math.max(1 - distance / radius, 0), 1);\n    switch (falloff) {\n      case \"exponential\":\n        return norm ** 2;\n      case \"gaussian\":\n        return Math.exp(-((distance / (radius / 2)) ** 2) / 2);\n      case \"linear\":\n      default:\n        return norm;\n    }\n  };\n\n  useAnimationFrame(() => {\n    if (!containerRef?.current) return;\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const { x, y } = mousePositionRef.current;\n    if (lastPositionRef.current.x === x && lastPositionRef.current.y === y) {\n      return;\n    }\n    lastPositionRef.current = { x, y };\n\n    letterRefs.current.forEach((letterRef, index) => {\n      if (!letterRef) return;\n\n      const rect = letterRef.getBoundingClientRect();\n      const letterCenterX = rect.left + rect.width / 2 - containerRect.left;\n      const letterCenterY = rect.top + rect.height / 2 - containerRect.top;\n\n      const distance = calculateDistance(\n        mousePositionRef.current.x,\n        mousePositionRef.current.y,\n        letterCenterX,\n        letterCenterY,\n      );\n\n      if (distance >= radius) {\n        letterRef.style.fontVariationSettings = fromFontVariationSettings;\n        return;\n      }\n\n      const falloffValue = calculateFalloff(distance);\n      const newSettings = parsedSettings\n        .map(({ axis, fromValue, toValue }) => {\n          const interpolatedValue =\n            fromValue + (toValue - fromValue) * falloffValue;\n          return `'${axis}' ${interpolatedValue}`;\n        })\n        .join(\", \");\n\n      interpolatedSettingsRef.current[index] = newSettings;\n      letterRef.style.fontVariationSettings = newSettings;\n    });\n  });\n\n  const words = label.split(\" \");\n  let letterIndex = 0;\n\n  return (\n    <span\n      ref={ref}\n      className={`${className} variable-proximity`}\n      onClick={onClick}\n      style={{ display: \"inline\", ...style }}\n      {...restProps}\n    >\n      {words.map((word, wordIndex) => (\n        <span\n          key={wordIndex}\n          style={{ display: \"inline-block\", whiteSpace: \"nowrap\" }}\n        >\n          {word.split(\"\").map((letter) => {\n            const currentLetterIndex = letterIndex++;\n            return (\n              <motion.span\n                key={currentLetterIndex}\n                ref={(el) => {\n                  letterRefs.current[currentLetterIndex] = el;\n                }}\n                style={{\n                  display: \"inline-block\",\n                  fontVariationSettings:\n                    interpolatedSettingsRef.current[currentLetterIndex],\n                }}\n                aria-hidden=\"true\"\n              >\n                {letter}\n              </motion.span>\n            );\n          })}\n          {wordIndex < words.length - 1 && (\n            <span style={{ display: \"inline-block\" }}>&nbsp;</span>\n          )}\n        </span>\n      ))}\n      <span className=\"sr-only\">{label}</span>\n    </span>\n  );\n});\n\nVariableProximity.displayName = \"VariableProximity\";\nexport default VariableProximity;\n","import React, { useRef, useState, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport VariableProximity from \"../blocks/TextAnimations/VariableProximity/VariableProximity\";\r\n\r\nconst AboutMe = () => {\r\n  const [ref, inView] = useInView({ triggerOnce: true, threshold: 0.3 });\r\n  const cardRef = useRef(null);\r\n  const containerRef = useRef(null); // Added ref for the container\r\n  const [transform, setTransform] = useState({ rotateX: 0, rotateY: 0, scale: 1 });\r\n\r\n  const handleMouseMove = useCallback((e) => {\r\n    const card = cardRef.current;\r\n    if (!card) return;\r\n\r\n    const { left, top, width, height } = card.getBoundingClientRect();\r\n    const x = e.clientX - left;\r\n    const y = e.clientY - top;\r\n\r\n    const rotateX = ((y - height / 2) / (height / 2)) * 10;\r\n    const rotateY = ((x - width / 2) / (width / 2)) * -10;\r\n\r\n    setTransform({ rotateX, rotateY, scale: 1.05 });\r\n  }, []);\r\n\r\n  const resetTransform = useCallback(() => {\r\n    setTransform({ rotateX: 0, rotateY: 0, scale: 1 });\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"about-me-fullscreen\" ref={ref} id=\"about\">\r\n      {/* Text Section */}\r\n      <motion.div\r\n        className=\"about-me-text\"\r\n        initial={{ opacity: 0, x: -100 }}\r\n        animate={inView ? { opacity: 1, x: 0 } : {}}\r\n        transition={{ duration: 1.2, ease: \"easeOut\" }}\r\n      >\r\n        <div ref={containerRef} style={{ position: \"relative\" }}>\r\n          {/* VariableProximity for the heading */}\r\n          <VariableProximity\r\n  label=\"Hi, I’m Selva\"\r\n  className=\"intro-text\"\r\n  fromFontVariationSettings=\"'wght' 600\" // Start from weight 400 (normal)\r\n  toFontVariationSettings=\"'wght' 200\" // End at weight 900 (bold)\r\n  containerRef={containerRef}\r\n  radius={120}\r\n  falloff=\"linear\"\r\n/>\r\n\r\n        </div>\r\n        \r\n        <p className=\"description-text\">\r\n        I create high-performance 3D models, immersive environments, and interactive web experiences tailored for AR, VR, gaming, and digital platforms. \r\n        My work merges technical precision with creative intent—delivering optimized, scalable solutions that are as functional as they are visually compelling. Alongside this, I design clean, purpose-driven graphics and posters that elevate storytelling across mediums. \r\n        </p>\r\n      </motion.div>\r\n\r\n      {/* Divider Line */}\r\n      <motion.div\r\n        className=\"divider-line\"\r\n        initial={{ scaleY: 0 }}\r\n        animate={inView ? { scaleY: 1 } : {}}\r\n        transition={{ duration: 1, ease: \"easeOut\", delay: 0.4 }}\r\n        style={{ originY: 0 }}\r\n        aria-hidden=\"true\"\r\n      />\r\n\r\n      {/* Image Section with Hover Effect */}\r\n      <motion.div\r\n        className=\"about-me-image\"\r\n        initial={{ opacity: 0, x: 100 }}\r\n        animate={inView ? { opacity: 1, x: 0 } : {}}\r\n        transition={{ duration: 1.2, ease: \"easeOut\", delay: 0.2 }}\r\n      >\r\n        <div\r\n          className=\"profile-wrapper\"\r\n          ref={cardRef}\r\n          onMouseMove={handleMouseMove}\r\n          onMouseLeave={resetTransform}\r\n          style={{\r\n            transform: `perspective(1000px) rotateX(${transform.rotateX}deg) rotateY(${transform.rotateY}deg) scale(${transform.scale})`,\r\n            transition: \"transform 0.2s ease-out\",\r\n            willChange: \"transform\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"./assets/About_pic.webp\"\r\n            alt=\"Portrait of Selva\"\r\n            className=\"profile-image\"\r\n            loading=\"lazy\"\r\n          />\r\n        </div>\r\n      </motion.div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n"],"names":["__defProp","Object","defineProperty","__publicField","obj","key","value","enumerable","configurable","writable","__defNormalProp","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","keys","sort","filter","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","length","delete","unobserve","size","disconnect","VariableProximity","forwardRef","props","ref","label","fromFontVariationSettings","toFontVariationSettings","containerRef","radius","falloff","className","onClick","style","restProps","_objectWithoutProperties","_excluded","letterRefs","useRef","interpolatedSettingsRef","mousePositionRef","positionRef","x","y","useEffect","updatePosition","current","rect","left","top","handleMouseMove","ev","clientX","clientY","handleTouchMove","touch","touches","addEventListener","removeEventListener","useMousePositionRef","lastPositionRef","parsedSettings","useMemo","parseSettings","settingsStr","split","s","trim","name","replace","parseFloat","fromSettings","toSettings","from","_ref","_toSettings$get","axis","fromValue","toValue","containerRect","letterRef","index","letterCenterX","width","letterCenterY","height","distance","x1","y1","x2","y2","Math","sqrt","calculateDistance","fontVariationSettings","falloffValue","norm","min","max","exp","calculateFalloff","newSettings","_ref2","interpolatedValue","concat","join","frameId","loop","requestAnimationFrame","cancelAnimationFrame","words","letterIndex","React","_extends","_objectSpread","display","word","wordIndex","whiteSpace","letter","currentLetterIndex","motion","span","el","displayName","AboutMe","delay","rootMargin","triggerOnce","skip","initialInView","onChange","setRef","state","setState","entryTarget","previousEntryTarget","result","useInView","cardRef","transform","setTransform","useState","rotateX","rotateY","scale","useCallback","e","card","resetTransform","div","initial","opacity","animate","transition","duration","ease","position","scaleY","originY","onMouseMove","onMouseLeave","willChange","src","alt","loading"],"sourceRoot":""}