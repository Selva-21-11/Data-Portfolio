{"version":3,"file":"30.127b68e991f85f0ab4d0.js","mappings":"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","sources":["webpack://my-3d-portfolio/./src/components/Contact.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst containerVariants = {\r\n  hidden: { opacity: 0, y: 60 },\r\n  visible: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      duration: 0.8,\r\n      ease: \"easeOut\",\r\n      when: \"beforeChildren\",\r\n      staggerChildren: 0.2,\r\n    },\r\n  },\r\n};\r\n\r\nconst itemVariants = {\r\n  hidden: { opacity: 0, y: 20 },\r\n  visible: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: { duration: 0.6, ease: \"easeOut\" },\r\n  },\r\n};\r\n\r\nconst ContactSection = () => {\r\n  const [formData, setFormData] = useState({ name: \"\", email: \"\", message: \"\" });\r\n  const [status, setStatus] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newErrors = {};\r\n\r\n    // Basic validation for empty fields\r\n    if (!formData.name.trim()) newErrors.name = \"Name is required.\";\r\n    if (!formData.email.trim()) newErrors.email = \"Email is required.\";\r\n    if (!formData.message.trim()) newErrors.message = \"Message is required.\";\r\n\r\n    // If there are validation errors, set them and stop submission\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      setStatus(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n\r\n    setErrors({});\r\n    setStatus(\"Sending...\");\r\n\r\n    try {\r\n      const response = await fetch(\"https://threed-portfolio-backend.onrender.com/send-email\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setStatus(data.success ? \"Message sent successfully!\" : \"Failed to send message.\");\r\n      if (data.success) setFormData({ name: \"\", email: \"\", message: \"\" });\r\n    } catch (error) {\r\n      console.error(\"Submission Error:\", error);\r\n      setStatus(\"Error sending message.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.section\r\n      className=\"contact-section\"\r\n      id=\"contact\"\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      whileInView=\"visible\"\r\n      viewport={{ once: true, amount: 0.1 }}\r\n    >\r\n      <motion.div className=\"contact-content\" variants={itemVariants}>\r\n        <h2 className=\"contact-title\">Get in Touch</h2>\r\n        <p className=\"contact-description\">\r\n          Have a project in mind? Want to collaborate? Just say hello!\r\n          Fill in the form below and Iâ€™ll get back to you soon.\r\n        </p>\r\n        <motion.form className=\"contact-form\" onSubmit={handleSubmit} noValidate variants={itemVariants}>\r\n          <motion.input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Your Name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label=\"Your Name\"\r\n            variants={itemVariants}\r\n            className={`contact-input ${errors.name ? \"input-error\" : \"\"}`}\r\n          />\r\n          {errors.name && <p className=\"error-message\">{errors.name}</p>}\r\n\r\n          <motion.input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your Email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label=\"Your Email\"\r\n            variants={itemVariants}\r\n            className={`contact-input ${errors.email ? \"input-error\" : \"\"}`}\r\n          />\r\n          {errors.email && <p className=\"error-message\">{errors.email}</p>}\r\n\r\n          <motion.textarea\r\n            name=\"message\"\r\n            placeholder=\"Your Message\"\r\n            rows=\"4\"\r\n            value={formData.message}\r\n            onChange={handleChange}\r\n            required\r\n            aria-label=\"Your Message\"\r\n            variants={itemVariants}\r\n            className={`contact-textarea ${errors.message ? \"input-error\" : \"\"}`}\r\n          />\r\n          {errors.message && <p className=\"error-message\">{errors.message}</p>}\r\n\r\n          <motion.button type=\"submit\" className=\"contact-btn\" variants={itemVariants}>\r\n            Send Message\r\n          </motion.button>\r\n        </motion.form>\r\n        {status && <motion.p className=\"contact-status\" variants={itemVariants}>{status}</motion.p>}\r\n      </motion.div>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default ContactSection;\r\n"],"names":["containerVariants","hidden","opacity","y","visible","transition","duration","ease","when","staggerChildren","itemVariants","ContactSection","formData","setFormData","useState","name","email","message","status","setStatus","errors","setErrors","handleChange","useCallback","e","value","target","prevData","_objectSpread","React","motion","section","className","id","variants","initial","whileInView","viewport","once","amount","div","form","onSubmit","async","preventDefault","newErrors","trim","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","data","json","success","error","console","noValidate","input","type","placeholder","onChange","required","concat","textarea","rows","button","p"],"sourceRoot":""}