{"version":3,"file":"374.b2219e386cb13aeea1a7.js","mappings":"mqCASA,MAoGA,EApGkBA,IAWZ,IAXa,KACjBC,EAAO,GAAE,UACTC,EAAY,GAAE,MACdC,EAAQ,IAAG,cACXC,EAAgB,CAAEC,QAAS,EAAGC,UAAW,yBAAyB,YAClEC,EAAc,CAAEF,QAAS,EAAGC,UAAW,sBAAsB,OAC7DE,EAAS,eAAc,UACvBC,EAAY,GAAG,WACfC,EAAa,SAAQ,UACrBC,EAAY,SAAQ,0BACpBC,GACDZ,EACC,MAAMa,EAAQZ,EAAKa,MAAM,KAAKC,KAAKC,GAASA,EAAKF,MAAM,MAEjDG,EAAUJ,EAAMK,QACfC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAC/BC,GAAMC,EAAAA,EAAAA,UACNC,GAAgBD,EAAAA,EAAAA,QAAO,IAE7BE,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAW,IAAIC,sBACnBC,IAAa,IAAXC,GAAMD,EACFC,EAAMC,iBACRV,GAAU,GACVM,EAASK,UAAUT,EAAIU,SACzB,GAEF,CAAEvB,YAAWC,eAKf,OAFAgB,EAASO,QAAQX,EAAIU,SAEd,IAAMN,EAASQ,YAAY,GACjC,CAACzB,EAAWC,IAEf,MAAMyB,GAAUC,EAAAA,EAAAA,IACdnB,EAAQoB,OACRpB,EAAQF,KAAI,CAACuB,EAAGC,KAAM,CACpBC,KAAMpC,EACNqC,GAAItB,EACAuB,gBACQC,EAAKpC,GACXiB,EAAcQ,SAAW,EAEvBR,EAAcQ,UAAYf,EAAQoB,QAClCzB,GAEAA,GACF,EAEFR,EACJD,MAAOoC,EAAIpC,EACXyC,OAAQ,CAAEpC,eAId,OACEqC,EAAAA,cAAA,KACEvB,IAAKA,EACLpB,UAAS,gBAAA4C,OAAkB5C,GAC3B6C,MAAO,CACLpC,YACAqC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,SAAU,eAGXtC,EAAME,KAAI,CAACC,EAAMoC,IAChBP,EAAAA,cAAA,QACEQ,IAAKD,EACLL,MAAO,CAAEE,QAAS,eAAgBC,WAAY,WAE7ClC,EAAKD,KAAI,CAACuC,EAAQC,KACjB,MAAMC,EACJ3C,EAAM4C,MAAM,EAAGL,GAAWM,QAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEvB,QAAQ,GAC7DkB,EAEF,OACEV,EAAAA,cAACgB,EAAAA,GAASC,KAAI,CACZT,IAAKG,EACLT,MAAKgB,EAAAA,EAAA,GACA5B,EAAQqB,IAAM,IACjBP,QAAS,eACTe,WAAY,wBAGbV,EACa,IAGpBT,EAAAA,cAAA,QAAME,MAAO,CAAEE,QAAS,eAAgBgB,MAAO,UAAW,QAK5D,ECxER,EA9BaC,IAETrB,EAAAA,cAAA,WAASsB,GAAG,OAAOjE,UAAU,QAC3B2C,EAAAA,cAAA,OAAK3C,UAAU,sCACb2C,EAAAA,cAAA,MAAI3C,UAAU,sBACZ2C,EAAAA,cAACuB,EAAS,CAACnE,KAAK,WAAWoE,UAAU,SAASlE,MAAO,MAGvD0C,EAAAA,cAAA,MAAI3C,UAAU,sBAAsB6C,MAAO,CAAEuB,eAAgB,SAC3DzB,EAAAA,cAACuB,EAAS,CAACnE,KAAK,mBAAmBoE,UAAU,SAASlE,MAAO,MAG/D0C,EAAAA,cAAA,KAAG3C,UAAU,uBAAuB6C,MAAO,CAAEuB,eAAgB,SAAU,qCAClC,IACnCzB,EAAAA,cAAA,QAAM3C,UAAU,kBAAiB,oBAGnC2C,EAAAA,cAAA,OAAK3C,UAAU,sBAAsB6C,MAAO,CAAEuB,eAAgB,OAC5DzB,EAAAA,cAAA,KAAG0B,KAAK,aAAarE,UAAU,mBAAmB,aAAW,kBAAiB,aAG9E2C,EAAAA,cAAA,KAAG0B,KAAK,WAAWrE,UAAU,qBAAqB,aAAW,cAAa,gB","sources":["webpack://my-3d-portfolio/./src/blocks/TextAnimations/SplitText/SplitText.jsx","webpack://my-3d-portfolio/./src/components/Hero.js"],"sourcesContent":["/*\r\n\tjsrepo 1.29.1\r\n\tInstalled from https://reactbits.dev/default/\r\n\t1-27-2025\r\n*/\r\nimport React from 'react';\r\nimport { useSprings, animated } from \"@react-spring/web\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nconst SplitText = ({\r\n  text = \"\",\r\n  className = \"\",\r\n  delay = 100,\r\n  animationFrom = { opacity: 0, transform: \"translate3d(0,40px,0)\" },\r\n  animationTo = { opacity: 1, transform: \"translate3d(0,0,0)\" },\r\n  easing = \"easeOutCubic\",\r\n  threshold = 0.1,\r\n  rootMargin = \"-100px\",\r\n  textAlign = \"center\",\r\n  onLetterAnimationComplete,\r\n}) => {\r\n  const words = text.split(\" \").map((word) => word.split(\"\"));\r\n\r\n  const letters = words.flat();\r\n  const [inView, setInView] = useState(false);\r\n  const ref = useRef();\r\n  const animatedCount = useRef(0);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setInView(true);\r\n          observer.unobserve(ref.current);\r\n        }\r\n      },\r\n      { threshold, rootMargin },\r\n    );\r\n\r\n    observer.observe(ref.current);\r\n\r\n    return () => observer.disconnect();\r\n  }, [threshold, rootMargin]);\r\n\r\n  const springs = useSprings(\r\n    letters.length,\r\n    letters.map((_, i) => ({\r\n      from: animationFrom,\r\n      to: inView\r\n        ? async (next) => {\r\n            await next(animationTo);\r\n            animatedCount.current += 1;\r\n            if (\r\n              animatedCount.current === letters.length &&\r\n              onLetterAnimationComplete\r\n            ) {\r\n              onLetterAnimationComplete();\r\n            }\r\n          }\r\n        : animationFrom,\r\n      delay: i * delay,\r\n      config: { easing },\r\n    })),\r\n  );\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      className={`split-parent ${className}`}\r\n      style={{\r\n        textAlign,\r\n        overflow: \"hidden\",\r\n        display: \"inline\",\r\n        whiteSpace: \"normal\",\r\n        wordWrap: \"break-word\",\r\n      }}\r\n    >\r\n      {words.map((word, wordIndex) => (\r\n        <span\r\n          key={wordIndex}\r\n          style={{ display: \"inline-block\", whiteSpace: \"nowrap\" }}\r\n        >\r\n          {word.map((letter, letterIndex) => {\r\n            const index =\r\n              words.slice(0, wordIndex).reduce((acc, w) => acc + w.length, 0) +\r\n              letterIndex;\r\n\r\n            return (\r\n              <animated.span\r\n                key={index}\r\n                style={{\r\n                  ...springs[index],\r\n                  display: \"inline-block\",\r\n                  willChange: \"transform, opacity\",\r\n                }}\r\n              >\r\n                {letter}\r\n              </animated.span>\r\n            );\r\n          })}\r\n          <span style={{ display: \"inline-block\", width: \"0.3em\" }}>\r\n            &nbsp;\r\n          </span>\r\n        </span>\r\n      ))}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default SplitText;\r\n","import React from \"react\";\r\nimport SplitText from \"../blocks/TextAnimations/SplitText/SplitText\";\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <section id=\"hero\" className=\"hero\">\r\n      <div className=\"hero-content upgraded-hero-content\">\r\n        <h1 className=\"first-line fade-in\">\r\n          <SplitText text=\"DISCOVER\" animation=\"fadeIn\" delay={50} />\r\n        </h1>\r\n\r\n        <h2 className=\"second-line fade-in\" style={{ animationDelay: \"0.3s\" }}>\r\n          <SplitText text=\"THIRD DIMENSION!\" animation=\"fadeIn\" delay={50} />\r\n        </h2>\r\n\r\n        <p className=\"hero-subtext fade-in\" style={{ animationDelay: \"0.6s\" }}>\r\n          Elevating digital experiences with{\" \"}\r\n          <span className=\"highlight-text\">3D & Creativity</span>\r\n        </p>\r\n\r\n        <nav className=\"cta-buttons fade-in\" style={{ animationDelay: \"1s\" }}>\r\n          <a href=\"#portfolio\" className=\"hero-btn primary\" aria-label=\"View Portfolio\">\r\n            View Work\r\n          </a>\r\n          <a href=\"#contact\" className=\"hero-btn secondary\" aria-label=\"Contact Me\">\r\n            Contact Me\r\n          </a>\r\n        </nav>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n"],"names":["_ref","text","className","delay","animationFrom","opacity","transform","animationTo","easing","threshold","rootMargin","textAlign","onLetterAnimationComplete","words","split","map","word","letters","flat","inView","setInView","useState","ref","useRef","animatedCount","useEffect","observer","IntersectionObserver","_ref2","entry","isIntersecting","unobserve","current","observe","disconnect","springs","useSprings","length","_","i","from","to","async","next","config","React","concat","style","overflow","display","whiteSpace","wordWrap","wordIndex","key","letter","letterIndex","index","slice","reduce","acc","w","animated","span","_objectSpread","willChange","width","Hero","id","SplitText","animation","animationDelay","href"],"sourceRoot":""}