{"version":3,"file":"159.e536c4e0834812a8c1ad.js","mappings":"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","sources":["webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs"],"sourcesContent":["import { time } from '../frameloop/sync-time.mjs';\r\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\r\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\r\nimport { warnOnce } from '../utils/warn-once.mjs';\r\nimport { frame } from '../frameloop/frame.mjs';\r\n\r\n/**\r\n * Maximum time between the value of two frames, beyond which we\r\n * assume the velocity has since been 0.\r\n */\r\nconst MAX_VELOCITY_DELTA = 30;\r\nconst isFloat = (value) => {\r\n    return !isNaN(parseFloat(value));\r\n};\r\nconst collectMotionValues = {\r\n    current: undefined,\r\n};\r\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\r\nclass MotionValue {\r\n    /**\r\n     * @param init - The initiating value\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    constructor(init, options = {}) {\r\n        /**\r\n         * This will be replaced by the build step with the latest version number.\r\n         * When MotionValues are provided to motion components, warn if versions are mixed.\r\n         */\r\n        this.version = \"11.18.2\";\r\n        /**\r\n         * Tracks whether this value can output a velocity. Currently this is only true\r\n         * if the value is numerical, but we might be able to widen the scope here and support\r\n         * other value types.\r\n         *\r\n         * @internal\r\n         */\r\n        this.canTrackVelocity = null;\r\n        /**\r\n         * An object containing a SubscriptionManager for each active event.\r\n         */\r\n        this.events = {};\r\n        this.updateAndNotify = (v, render = true) => {\r\n            const currentTime = time.now();\r\n            /**\r\n             * If we're updating the value during another frame or eventloop\r\n             * than the previous frame, then the we set the previous frame value\r\n             * to current.\r\n             */\r\n            if (this.updatedAt !== currentTime) {\r\n                this.setPrevFrameValue();\r\n            }\r\n            this.prev = this.current;\r\n            this.setCurrent(v);\r\n            // Update update subscribers\r\n            if (this.current !== this.prev && this.events.change) {\r\n                this.events.change.notify(this.current);\r\n            }\r\n            // Update render subscribers\r\n            if (render && this.events.renderRequest) {\r\n                this.events.renderRequest.notify(this.current);\r\n            }\r\n        };\r\n        this.hasAnimated = false;\r\n        this.setCurrent(init);\r\n        this.owner = options.owner;\r\n    }\r\n    setCurrent(current) {\r\n        this.current = current;\r\n        this.updatedAt = time.now();\r\n        if (this.canTrackVelocity === null && current !== undefined) {\r\n            this.canTrackVelocity = isFloat(this.current);\r\n        }\r\n    }\r\n    setPrevFrameValue(prevFrameValue = this.current) {\r\n        this.prevFrameValue = prevFrameValue;\r\n        this.prevUpdatedAt = this.updatedAt;\r\n    }\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` is updated.\r\n     *\r\n     * It returns a function that, when called, will cancel the subscription.\r\n     *\r\n     * When calling `onChange` inside a React component, it should be wrapped with the\r\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n     *\r\n     * ```jsx\r\n     * export const MyComponent = () => {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\r\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <motion.div style={{ x }} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @param subscriber - A function that receives the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @deprecated\r\n     */\r\n    onChange(subscription) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\r\n        }\r\n        return this.on(\"change\", subscription);\r\n    }\r\n    on(eventName, callback) {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = new SubscriptionManager();\r\n        }\r\n        const unsubscribe = this.events[eventName].add(callback);\r\n        if (eventName === \"change\") {\r\n            return () => {\r\n                unsubscribe();\r\n                /**\r\n                 * If we have no more change listeners by the start\r\n                 * of the next frame, stop active animations.\r\n                 */\r\n                frame.read(() => {\r\n                    if (!this.events.change.getSize()) {\r\n                        this.stop();\r\n                    }\r\n                });\r\n            };\r\n        }\r\n        return unsubscribe;\r\n    }\r\n    clearListeners() {\r\n        for (const eventManagers in this.events) {\r\n            this.events[eventManagers].clear();\r\n        }\r\n    }\r\n    /**\r\n     * Attaches a passive effect to the `MotionValue`.\r\n     *\r\n     * @internal\r\n     */\r\n    attach(passiveEffect, stopPassiveEffect) {\r\n        this.passiveEffect = passiveEffect;\r\n        this.stopPassiveEffect = stopPassiveEffect;\r\n    }\r\n    /**\r\n     * Sets the state of the `MotionValue`.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * const x = useMotionValue(0)\r\n     * x.set(10)\r\n     * ```\r\n     *\r\n     * @param latest - Latest value to set.\r\n     * @param render - Whether to notify render subscribers. Defaults to `true`\r\n     *\r\n     * @public\r\n     */\r\n    set(v, render = true) {\r\n        if (!render || !this.passiveEffect) {\r\n            this.updateAndNotify(v, render);\r\n        }\r\n        else {\r\n            this.passiveEffect(v, this.updateAndNotify);\r\n        }\r\n    }\r\n    setWithVelocity(prev, current, delta) {\r\n        this.set(current);\r\n        this.prev = undefined;\r\n        this.prevFrameValue = prev;\r\n        this.prevUpdatedAt = this.updatedAt - delta;\r\n    }\r\n    /**\r\n     * Set the state of the `MotionValue`, stopping any active animations,\r\n     * effects, and resets velocity to `0`.\r\n     */\r\n    jump(v, endAnimation = true) {\r\n        this.updateAndNotify(v);\r\n        this.prev = v;\r\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\r\n        endAnimation && this.stop();\r\n        if (this.stopPassiveEffect)\r\n            this.stopPassiveEffect();\r\n    }\r\n    /**\r\n     * Returns the latest state of `MotionValue`\r\n     *\r\n     * @returns - The latest state of `MotionValue`\r\n     *\r\n     * @public\r\n     */\r\n    get() {\r\n        if (collectMotionValues.current) {\r\n            collectMotionValues.current.push(this);\r\n        }\r\n        return this.current;\r\n    }\r\n    /**\r\n     * @public\r\n     */\r\n    getPrevious() {\r\n        return this.prev;\r\n    }\r\n    /**\r\n     * Returns the latest velocity of `MotionValue`\r\n     *\r\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n     *\r\n     * @public\r\n     */\r\n    getVelocity() {\r\n        const currentTime = time.now();\r\n        if (!this.canTrackVelocity ||\r\n            this.prevFrameValue === undefined ||\r\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\r\n            return 0;\r\n        }\r\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\r\n        // Casts because of parseFloat's poor typing\r\n        return velocityPerSecond(parseFloat(this.current) -\r\n            parseFloat(this.prevFrameValue), delta);\r\n    }\r\n    /**\r\n     * Registers a new animation to control this `MotionValue`. Only one\r\n     * animation can drive a `MotionValue` at one time.\r\n     *\r\n     * ```jsx\r\n     * value.start()\r\n     * ```\r\n     *\r\n     * @param animation - A function that starts the provided animation\r\n     *\r\n     * @internal\r\n     */\r\n    start(startAnimation) {\r\n        this.stop();\r\n        return new Promise((resolve) => {\r\n            this.hasAnimated = true;\r\n            this.animation = startAnimation(resolve);\r\n            if (this.events.animationStart) {\r\n                this.events.animationStart.notify();\r\n            }\r\n        }).then(() => {\r\n            if (this.events.animationComplete) {\r\n                this.events.animationComplete.notify();\r\n            }\r\n            this.clearAnimation();\r\n        });\r\n    }\r\n    /**\r\n     * Stop the currently active animation.\r\n     *\r\n     * @public\r\n     */\r\n    stop() {\r\n        if (this.animation) {\r\n            this.animation.stop();\r\n            if (this.events.animationCancel) {\r\n                this.events.animationCancel.notify();\r\n            }\r\n        }\r\n        this.clearAnimation();\r\n    }\r\n    /**\r\n     * Returns `true` if this value is currently animating.\r\n     *\r\n     * @public\r\n     */\r\n    isAnimating() {\r\n        return !!this.animation;\r\n    }\r\n    clearAnimation() {\r\n        delete this.animation;\r\n    }\r\n    /**\r\n     * Destroy and clean up subscribers to this `MotionValue`.\r\n     *\r\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n     * created a `MotionValue` via the `motionValue` function.\r\n     *\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this.clearListeners();\r\n        this.stop();\r\n        if (this.stopPassiveEffect) {\r\n            this.stopPassiveEffect();\r\n        }\r\n    }\r\n}\r\nfunction motionValue(init, options) {\r\n    return new MotionValue(init, options);\r\n}\r\n\r\nexport { MotionValue, collectMotionValues, motionValue };\r\n","import { rgba } from './rgba.mjs';\r\nimport { isColorString } from './utils.mjs';\r\n\r\nfunction parseHex(v) {\r\n    let r = \"\";\r\n    let g = \"\";\r\n    let b = \"\";\r\n    let a = \"\";\r\n    // If we have 6 characters, ie #FF0000\r\n    if (v.length > 5) {\r\n        r = v.substring(1, 3);\r\n        g = v.substring(3, 5);\r\n        b = v.substring(5, 7);\r\n        a = v.substring(7, 9);\r\n        // Or we have 3 characters, ie #F00\r\n    }\r\n    else {\r\n        r = v.substring(1, 2);\r\n        g = v.substring(2, 3);\r\n        b = v.substring(3, 4);\r\n        a = v.substring(4, 5);\r\n        r += r;\r\n        g += g;\r\n        b += b;\r\n        a += a;\r\n    }\r\n    return {\r\n        red: parseInt(r, 16),\r\n        green: parseInt(g, 16),\r\n        blue: parseInt(b, 16),\r\n        alpha: a ? parseInt(a, 16) / 255 : 1,\r\n    };\r\n}\r\nconst hex = {\r\n    test: /*@__PURE__*/ isColorString(\"#\"),\r\n    parse: parseHex,\r\n    transform: rgba.transform,\r\n};\r\n\r\nexport { hex };\r\n","import { alpha } from '../numbers/index.mjs';\r\nimport { percent } from '../numbers/units.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst hsla = {\r\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\r\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\r\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\r\n        return (\"hsla(\" +\r\n            Math.round(hue) +\r\n            \", \" +\r\n            percent.transform(sanitize(saturation)) +\r\n            \", \" +\r\n            percent.transform(sanitize(lightness)) +\r\n            \", \" +\r\n            sanitize(alpha.transform(alpha$1)) +\r\n            \")\");\r\n    },\r\n};\r\n\r\nexport { hsla };\r\n","import { hex } from './hex.mjs';\r\nimport { hsla } from './hsla.mjs';\r\nimport { rgba } from './rgba.mjs';\r\n\r\nconst color = {\r\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\r\n    parse: (v) => {\r\n        if (rgba.test(v)) {\r\n            return rgba.parse(v);\r\n        }\r\n        else if (hsla.test(v)) {\r\n            return hsla.parse(v);\r\n        }\r\n        else {\r\n            return hex.parse(v);\r\n        }\r\n    },\r\n    transform: (v) => {\r\n        return typeof v === \"string\"\r\n            ? v\r\n            : v.hasOwnProperty(\"red\")\r\n                ? rgba.transform(v)\r\n                : hsla.transform(v);\r\n    },\r\n};\r\n\r\nexport { color };\r\n","import { clamp } from '../../../utils/clamp.mjs';\r\nimport { alpha, number } from '../numbers/index.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst clampRgbUnit = (v) => clamp(0, 255, v);\r\nconst rgbUnit = {\r\n    ...number,\r\n    transform: (v) => Math.round(clampRgbUnit(v)),\r\n};\r\nconst rgba = {\r\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\r\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\r\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\r\n        rgbUnit.transform(red) +\r\n        \", \" +\r\n        rgbUnit.transform(green) +\r\n        \", \" +\r\n        rgbUnit.transform(blue) +\r\n        \", \" +\r\n        sanitize(alpha.transform(alpha$1)) +\r\n        \")\",\r\n};\r\n\r\nexport { rgbUnit, rgba };\r\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\r\n\r\nexport { singleColorRegex };\r\n","import { floatRegex } from '../utils/float-regex.mjs';\r\nimport { isNullish } from '../utils/is-nullish.mjs';\r\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\r\n\r\n/**\r\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\r\n * but false if a number or multiple colors\r\n */\r\nconst isColorString = (type, testProp) => (v) => {\r\n    return Boolean((typeof v === \"string\" &&\r\n        singleColorRegex.test(v) &&\r\n        v.startsWith(type)) ||\r\n        (testProp &&\r\n            !isNullish(v) &&\r\n            Object.prototype.hasOwnProperty.call(v, testProp)));\r\n};\r\nconst splitColor = (aName, bName, cName) => (v) => {\r\n    if (typeof v !== \"string\")\r\n        return v;\r\n    const [a, b, c, alpha] = v.match(floatRegex);\r\n    return {\r\n        [aName]: parseFloat(a),\r\n        [bName]: parseFloat(b),\r\n        [cName]: parseFloat(c),\r\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\r\n    };\r\n};\r\n\r\nexport { isColorString, splitColor };\r\n","function isNullish(v) {\r\n    return v == null;\r\n}\r\n\r\nexport { isNullish };\r\n","import { complex } from './index.mjs';\r\nimport { floatRegex } from '../utils/float-regex.mjs';\r\n\r\n/**\r\n * Properties that should default to 1 or 100%\r\n */\r\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\r\nfunction applyDefaultFilter(v) {\r\n    const [name, value] = v.slice(0, -1).split(\"(\");\r\n    if (name === \"drop-shadow\")\r\n        return v;\r\n    const [number] = value.match(floatRegex) || [];\r\n    if (!number)\r\n        return v;\r\n    const unit = value.replace(number, \"\");\r\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\r\n    if (number !== value)\r\n        defaultValue *= 100;\r\n    return name + \"(\" + defaultValue + unit + \")\";\r\n}\r\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\r\nconst filter = {\r\n    ...complex,\r\n    getAnimatableNone: (v) => {\r\n        const functions = v.match(functionRegex);\r\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\r\n    },\r\n};\r\n\r\nexport { filter };\r\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\r\n\r\nexport { colorRegex };\r\n","import { color } from '../color/index.mjs';\r\nimport { colorRegex } from '../utils/color-regex.mjs';\r\nimport { floatRegex } from '../utils/float-regex.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\n\r\nfunction test(v) {\r\n    var _a, _b;\r\n    return (isNaN(v) &&\r\n        typeof v === \"string\" &&\r\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\r\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\r\n            0);\r\n}\r\nconst NUMBER_TOKEN = \"number\";\r\nconst COLOR_TOKEN = \"color\";\r\nconst VAR_TOKEN = \"var\";\r\nconst VAR_FUNCTION_TOKEN = \"var(\";\r\nconst SPLIT_TOKEN = \"${}\";\r\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\r\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\r\nfunction analyseComplexValue(value) {\r\n    const originalValue = value.toString();\r\n    const values = [];\r\n    const indexes = {\r\n        color: [],\r\n        number: [],\r\n        var: [],\r\n    };\r\n    const types = [];\r\n    let i = 0;\r\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\r\n        if (color.test(parsedValue)) {\r\n            indexes.color.push(i);\r\n            types.push(COLOR_TOKEN);\r\n            values.push(color.parse(parsedValue));\r\n        }\r\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\r\n            indexes.var.push(i);\r\n            types.push(VAR_TOKEN);\r\n            values.push(parsedValue);\r\n        }\r\n        else {\r\n            indexes.number.push(i);\r\n            types.push(NUMBER_TOKEN);\r\n            values.push(parseFloat(parsedValue));\r\n        }\r\n        ++i;\r\n        return SPLIT_TOKEN;\r\n    });\r\n    const split = tokenised.split(SPLIT_TOKEN);\r\n    return { values, split, indexes, types };\r\n}\r\nfunction parseComplexValue(v) {\r\n    return analyseComplexValue(v).values;\r\n}\r\nfunction createTransformer(source) {\r\n    const { split, types } = analyseComplexValue(source);\r\n    const numSections = split.length;\r\n    return (v) => {\r\n        let output = \"\";\r\n        for (let i = 0; i < numSections; i++) {\r\n            output += split[i];\r\n            if (v[i] !== undefined) {\r\n                const type = types[i];\r\n                if (type === NUMBER_TOKEN) {\r\n                    output += sanitize(v[i]);\r\n                }\r\n                else if (type === COLOR_TOKEN) {\r\n                    output += color.transform(v[i]);\r\n                }\r\n                else {\r\n                    output += v[i];\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n}\r\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\r\nfunction getAnimatableNone(v) {\r\n    const parsed = parseComplexValue(v);\r\n    const transformer = createTransformer(v);\r\n    return transformer(parsed.map(convertNumbersToZero));\r\n}\r\nconst complex = {\r\n    test,\r\n    parse: parseComplexValue,\r\n    createTransformer,\r\n    getAnimatableNone,\r\n};\r\n\r\nexport { analyseComplexValue, complex };\r\n","import { clamp } from '../../../utils/clamp.mjs';\r\n\r\nconst number = {\r\n    test: (v) => typeof v === \"number\",\r\n    parse: parseFloat,\r\n    transform: (v) => v,\r\n};\r\nconst alpha = {\r\n    ...number,\r\n    transform: (v) => clamp(0, 1, v),\r\n};\r\nconst scale = {\r\n    ...number,\r\n    default: 1,\r\n};\r\n\r\nexport { alpha, number, scale };\r\n","const createUnitType = (unit) => ({\r\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\r\n    parse: parseFloat,\r\n    transform: (v) => `${v}${unit}`,\r\n});\r\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\r\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\r\nconst px = /*@__PURE__*/ createUnitType(\"px\");\r\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\r\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\r\nconst progressPercentage = {\r\n    ...percent,\r\n    parse: (v) => percent.parse(v) / 100,\r\n    transform: (v) => percent.transform(v * 100),\r\n};\r\n\r\nexport { degrees, percent, progressPercentage, px, vh, vw };\r\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\r\n\r\nexport { floatRegex };\r\n","// If this number is a decimal, make it just five decimal places\r\n// to avoid exponents\r\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\r\n\r\nexport { sanitize };\r\n","import { isWillChangeMotionValue } from './is.mjs';\r\n\r\nfunction addValueToWillChange(visualElement, key) {\r\n    const willChange = visualElement.getValue(\"willChange\");\r\n    /**\r\n     * It could be that a user has set willChange to a regular MotionValue,\r\n     * in which case we can't add the value to it.\r\n     */\r\n    if (isWillChangeMotionValue(willChange)) {\r\n        return willChange.add(key);\r\n    }\r\n}\r\n\r\nexport { addValueToWillChange };\r\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\r\n\r\nfunction isWillChangeMotionValue(value) {\r\n    return Boolean(isMotionValue(value) && value.add);\r\n}\r\n\r\nexport { isWillChangeMotionValue };\r\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\r\n\r\nexport { isMotionValue };\r\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\r\nimport { isMotionValue } from './is-motion-value.mjs';\r\n\r\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n */\r\nfunction resolveMotionValue(value) {\r\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\r\n    return isCustomValue(unwrappedValue)\r\n        ? unwrappedValue.toValue()\r\n        : unwrappedValue;\r\n}\r\n\r\nexport { resolveMotionValue };\r\n"],"names":["collectMotionValues","current","undefined","MotionValue","constructor","init","options","this","version","canTrackVelocity","events","updateAndNotify","v","render","currentTime","now","updatedAt","setPrevFrameValue","prev","setCurrent","change","notify","renderRequest","hasAnimated","owner","value","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","callback","unsubscribe","add","read","getSize","stop","clearListeners","eventManagers","clear","attach","passiveEffect","stopPassiveEffect","set","setWithVelocity","delta","jump","endAnimation","get","push","getPrevious","getVelocity","Math","min","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","hex","test","parse","r","g","b","a","length","substring","red","parseInt","green","blue","alpha","transform","hsla","hue","saturation","lightness","alpha$1","round","color","hasOwnProperty","rgbUnit","clampRgbUnit","rgba","singleColorRegex","isColorString","type","testProp","Boolean","startsWith","isNullish","Object","prototype","call","splitColor","aName","bName","cName","c","match","maxDefaults","Set","applyDefaultFilter","name","slice","split","number","unit","replace","defaultValue","has","functionRegex","filter","getAnimatableNone","functions","map","join","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","i","parsedValue","parseComplexValue","createTransformer","source","numSections","output","sanitize","convertNumbersToZero","complex","_a","_b","parsed","transformer","scale","default","createUnitType","endsWith","degrees","percent","px","vh","vw","progressPercentage","floatRegex","addValueToWillChange","visualElement","key","willChange","getValue","isMotionValue","resolveMotionValue","unwrappedValue","toValue"],"sourceRoot":""}